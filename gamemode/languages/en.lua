local function eformat(base, int, one, more)
	int = int % 10
	if int == 1 then
		return base .. one
	else
		return base .. more
	end
end
local function seconds(d) return d .. eformat(" second", d, "", "s") end
return
{
Lang = "English",
Author = "UnkN (STEAM_0:1:62336503)",

E_BlueBarrel = "Blue barrel",
E_WoodCrate = "Wood crate",
E_ExplosiveBarrel = "Explosive Barrel",
E_Bathtub = "Bathtub",
E_Stove = "Stove",
E_Fridge = "Fridge",
E_Couch = "Couch",
E_Bigcouch = "Big couch",
E_Soccerball = "Soccer ball",
E_Basketball = "Basket ball",

-- CLIENTSIDE --

NotBound = "<No button>",
FreedayTimer = "Free day (%s)",
SpectatePlayer = "Spectacting for: %s",
GReplaceWeapon = "[%s] Replace at %s",
GPickupWeapon = "[%s] Pickup %s",
Unknown = "Unknown",
Simon = "Simon",
Guard = "Guard",
Prisioner = "Prisioner",
RoundStarting = "Round begins",
RoundEnded = "Round ended",
PrepareRound = "Preparing for game start!",
RoundExpire = "Round end in %s",
DamageGiven = "Damage dealt:",
DamageReceived = "Damage taken:",
YouWasKilledBy = "You was killed",
World = "World",
ByWorld = "by world",
From = "by %s",
With = "with %s",
YouDoneSuicide = "You suicided",
YouWasKilledByPlayer = "You was killed by %s",
Close = "Close %s",
Open = "Open %s",
Spectators = "Spectators",
Prisioners = "Prisioners",
PrisionersDead = "Dead prisioners",
Guards = "Guards",
GuardsDead = "Dead guards",
Dead = "Dead",
Attackers = "Attackers",
Defenders = "Defenders",
Hands = "Hands",
CurrentMap = "Current map: %s",
CurrentOnline = { "Online: ", function(d) return d .. eformat(" player",d,"","s") end, " of %s" },
Players = "Players",
Zombies = "Zombies",
Survivors = "Survivors",
Seekers = "Seekers",
Hiding = "Hiding",

Point = "Point %s",
Gag = "Gag",
Ungag = "Ungag",
Enable = "Enable",
Disable = "Disable",
PrisVoice = "Voice T",
GuardVoice = "Voice CT",
Boxing = "Boxing",
Collisions = "Collisions",
PrisSplit = "Split T",
Bhop = "Bunnyhop",
Circle = "Circle %s",
LineUp = "Line %s",
Remove = "Remove %s",
RemovePrisSplit = "Remove division",
TeamsCnt = "%s teams",
Avoidness = "Avoidness",

KillGuards = "Kill CT",
SelectGuard = "Select CT",
TakeFreeday = "Take freeday",
DuelWith = "Duel at %s",
DuelAny = "random weapon",
LastWar = "Last war",
LRMenu = "Last request menu",

Freeday = "Free day",
ZombieFD = "Zombie free day",
Defense = "Defense",
HideNSeek = "Hide and seek",
TeamWars = "Team wars",
AdditionalFuncs = "Additional functions",
MainFuncs = "Main functions",
BasicFuncs = "Basic functions",
ToggleVoiceChat = "Enable / disable voice chat to",
TeamManagement = "Team transfer",
ChangeTeam = "Transfer %s to %s",
FreedayMenu = "FD management",
GiveFD = { function(b) return b and "Give freeday to " or "Expire freeday to " end, "%s" },
AlterSelectMenu = "Select simon's deputy",
ChangeAlter = "Revoke deputy from %s.",
PlayerGag = "Player",
PlayerGagMenu = "VoiceChat management menu",
PlayerGagFlag = { function(b) return b and "Gag %s" or "Ungag %s" end},
GameModes = "Gamemodes",
SimonMenu = "Simon menu",
StatusMenu = "Status menu",
Cells = "Cells",
VoiceMenu = "Voice chat",
Count = "Count players",
GameMenu = "Game menu",
PropDamage = "Damage from props",
Pickup = "Item pickup",
Flashlight = "Flashlight",
RespawnMenu = "Respawn menu",
RespawnPlayer = "Respawn %s",
SpawnMenu = "Prop spawn menu",

["hurt"] = "biter",
["explosion"] = "explosion",
["worldhurt"] = "slap",
["balk"] = "balk",
["box"] = "box",
["rotating"] = "rotating beam",
["door"] = "door",
["crate"] = "crate",
["fire"] = "fire",
["laser"] = "laser",
["Kevlar"] = "Kevlar",
["KevlarHelm"] = "Kevlar + Helmet",

BuyMenu = "Buy menu",
Pistols = "Pistols",
SemiAuto = "Semi-Auto",
Shotguns = "Shotguns",
Rifles = "Rifles",
Snipers = "Sniper rifles",
MachineGuns = "Machine guns",
Grenades = "Grenades",
Others = "Other",

R_alldead = "All players died - Noone",
R_wint = "Guards were killed. Prisioners win",
R_winct = "Prisoners failed to escape",
R_timeout = "Time is up",
R_winzombie = "Zombies took over the world",
R_winhuman = "People eliminated the infection",
R_winhiders = "Hiding team victory",
R_winseeker = "Seekers won",
R_winassault = "Defense failed",
R_winguards = "Defense success",
R_battleend = "The fight is over",
SimonIs = "Simon: %s",
SimonNot = "Currently no simon",
GlobalFreeday = "Free day! Will end in %s",
ZombieFreeday = "Zombie free day",
Score = "Score",
Deaths = "Deaths",
Ping = "Ping",
PointX = "Point %s\n%s m.",
LineUpX = "Line up here!",
DropWeapon = "Drop",
CopySteamID = "Copy SteamID",
CopyNickName = "Copy nickname",
ShowProfile = "Show profile",

-- SERVERSIDE --

SERVER = "SERVER",
["[SERVER]"] = "[SERVER] ",
Unavailable = "Not available at that moment.",
NoCommand = "Command does not exists.",
ConsoleOnly = "You're not allowed to execute this command.",
PlayersOnly = "This command can be executed only by player.",
ArgumentException = { "Error in argument #%s: ", "%s" },
TempUnavail = "Command temporary unavailable.",
WrongType = "Wrong type.",
NotEnoughtPlayers = "Can't start gamemode: Not enought players.",
NotString = "not a string",
EntityNotFound = "entity not found",
EntIndexNotify = "entity must be provided by number (EntIndex)",
NotNumber = "string are not number",
FoundMultiplyPl = "found multiple players",
PlayerNotFound = "player not found",
StringNumbers = "string must contain only numbers",
NotEnoughtNumbers = "not enought numbers in string",
RequireNumbers = "string with numbers are required",
CMDError = "Error caused while proccessing this command",
AdminOnly = "You haven't rights to be spectator.",
KilledByEntity = { "%s", " was killed by entity ", "%s" },
PlayerKilledPlayer = { "%s", " killed ", "%s", " by ", "%s", function(b) return b and " with headshot" or "" end, function(b) return b and " throught wall" or "" end, "."},

Balance = "[Balance] ",
SimChTeam = { "%s", " transferred ", "%s", " to ", "%s"},
YouDemoted = "You can't be guard!",
MuchGuards = "Guards are too much!",
DemotedGuard = { "This player can't be guard ", "%s" },
ChTeamFailed = "Something is block player team change",
YourColor = { "Your color - ", "%s" },
NotEnougthToSplit = "Not enough players to team split.",
DuelFailedWrongTeam = "Duel failed with this player.",
WeaponNotFound = "Weapon aren't found.",
PlDuelWith = { "%s", " challenged ", "%s", " to a duel. " },
SelWeaponRandom = { "Selected random weapon: ", "%s" },
SelWeapon = { "Selected weapon: ", "%s" },
WeaponRestricted = "Weapon restricted or not found",
KillLastPl = "Hurry! Kill the last prisioner!",
RequestLastWar = { "%s", " declared last war! ", "Can the ", "%s", " survive?" },
PickFD = { "%s", " took freeday for the next round!" },
PickKillCT = { "%s", " selected to kill ", "%s" },
PickKillCTFailed = { "Due to circumstances the ", "%s", "'s wasn't be killed." },
LRNotify = "Type !lr or press F3 to select last request",
LRGlobal = "The last prisioner was left!",
SelectLR = { "%s", " is last prisioner!" },
NotLR = "You aren't last prisioner!",
NotLRPCount = "Not enought players to last request.",
NotLRDuel = "You can't take last request while in duel!",
LRNormalDay = "Last request only available only in common day.",
AFKAutoSlay = { "%s", " was killed because AFK." },
MarkedAsRebel = { "%s", function(b) return b and " wanted for " or " no more wanted." end, "%s" },
PassiveRebel = "passive game",
ActiveRebel = "active rebellion",
RebelTimer = "You will be discovered through: %s",
AutoSlayTimer = "You will be killed for being AFK through: %s",

Red = "Red",
Blue = "Blue",
Yellow = "Yellow",
Green = "Green",

NotSimon = "You aren't simon!",
NotCT = "Only for guards!",
NotDuel = "Not allowed while in duel!",
NotT = "Only for prisioners!",
LRAlready  = "You already did last request!",
SimLeft = "Simon disconnected!",
SimDead = "Simon dead!",
FDEnd = "Free day expired!",
FDPrisEnd = { "Free day expired for ", "%s." },
PrisRandWep = "You accidentally found %s!",
PrisMuteRound = { "Voice chat is restricted for prisioners for ", seconds },
PrisUnmuteRound = "Prisioners can again use voice chat!",
NotLastRequest = { "%s", " no longer last prisioner." },
SimonOverflowLimit = "You have exceeded the limit for creating objects (max: %s)",
ObjectNotExists = "Object with specified ID doesn't exists.",

SimPlayerFD = { "%s", function(b) return b and " gave free day to " or " revoked free day to " end, "%s"},
SimonSelect = { "Simon selected, it's - ", "%s" },
SimonCantFreeday = "You can't become simon while free day.",
SimonCantLR = "You can't become simon while last request active.",
SimonExists = "Simon already choosen!",
SimonAlready = "You're already simon!",
SimSplitTeam = { "%s", " divided ", "%s", " to ", function(d) return d .. eforman("team",d,"","s") end, "." },
SimDisSplitTeam = { "%s", " canceled division of ", "%s", " into teams" },
SimOpenCells = { "%s", function(b) return b and " opened prisioner cells." or " closed prisioner cells." end },
SimCollision = { "%s", function(b) return b and " enabled collisions." or " disabled collisions." end },
SimBhop = { "%s", function(b) return b and " enabled bunnyhop." or " disabled bunnyhop." end },
SimBoxing = { "%s", function(b) return b and " enabled boxing." or " disabled boxing." end },
SimGagPl = { "%s", function(b) return b and " disabled voice chat to " or " unmutted voice chat to " end, "%s" },
SimUnsetAlter = { "%s", " no longer simon's deputy." },
SimSelectAlter = { "%s", " nominated ", "%s", " to be simon's deputy." },
SimFDGive = { "%s", " gave free day to ", "%s" },
SimFDEnd = { "%s", " declared ", "%s", "'s freeday as expired." },
SimMutePl = { "%s", function(b) return b and " gagged " or " ungagged " end, "%s" },
SimGuardGag = { "%s", function(b) return b and " gagged " or " ungagged " end, "%s" },
SimPickup = { "%s", function(b) return b and " enabled prop pickup." or " disabled prop pickup." end },
SimAvoidness = { "%s", function(b) return b and " enabled player avoidness." or " disabled player avoidness." end },
SimPropDamage = { "%s", function(b) return b and " enabled prop damage." or " disabled prop damage." end },
SimRespawn = { "%s", " respawned ", "%s", function(b) return b and " at the death site." or "." end },
SimFlashlight = { "%s", function(b) return b and " allowed " or " denied " end, "%s", " to use flashlight." },
SimAlreadyAlive = { "%s", " already alive." },
SimSpawnedAlready = { "%s", " was already respawned in this round." },
SimCountT = { "%s", " counted the number of prisioners. Here ", "%s ", "%s" },
SimCountNT = { "Next ", "%s", " are missing: ", "%s" },

NotifyBox = "Boxing!",
NotifyBoxEnded = "Boxing ended!",

E_RandomWpn = "Error happened while selecting weapon, it will be selected randomly.",
DuelBeginIn = { "Duel will begin in ", seconds },
DuelBegin = "Duel has begun!",
DuelFailed = " Duel interrupted.",
DuelLeft = { "%s", " escaped from a duel ", "%s" },
DuelLose = { "%s", " lost in a duel with ", "%s" },
NextDayFD = "You will receive free day in next round!",
GMNotNormal = "Can't start gamemode: its already started.",
GMNotExists = "Can't start gamemode: its disabled or not exists.",
GMFirstDay = "Gamemode can be started only in first day.",

ZFD_FirstZombie = { "Beware, %s", " is first zombie!" },
ZFD_ZombieNotFound = "Can't start gamemode: zombie not found!",
ZFD_Wave = { "Wave ", "%s", " begins!" },
ZFD_FinalWave = "Final wave.",
ZFD_Begin = "Gamemode started: Zombie attack!",
ZFD_Desc = { "Survivors has ", seconds, " to take weapons. One of the survivors can become zombie." },
ZFD_Infect = { "%s", " infected ", "%s" },
ZFD_NotifyLastSurvivor = "Last survivor remains!",
ZFD_LastSurvivor = { "%s", " is last survivor!" },

TW_Begin = { "Gamemode started: Team wars!" },
TW_NotifyGodmode = { "%s", " gave godmode to all players for ", seconds },
TW_NotifyGamemode = "Collaborate against other teams!",
TW_WarBegins = "Lets a battle begin!",
TW_TeamColor = { "Your team color is ", "%s" },
TW_Teammates = { "Your team: ", "%s" },
TW_TeamsToday = "The following teams will take part in the battle: " ,
TW_TeamWin = { "Won team with the color ", "%s" },
TW_TeamWinners = "Next teams are won: ",
TW_TeamAlive = { "In team with color ", "%s ", function(c) return c .. eformat(" player",c,"","s") .. " left." end },

HS_NotHidden = { "Ready or not, here ", "%s", " comes! Game is beginning." },
HS_Begin = "Gamemode started: Hide and seek!",
HS_Godmode = { "%s", " makes hiding players invisible." },
HS_Gamemode = { "Hiding players has ", seconds, ", to hide!" },
HS_Catch = { "%s", " catch ", "%s" },

FD_Begin = "Free day announced! Simon can set the rules.",

DF_Cleaning = "Extermination begins!",
DF_Begins = "Defense started!",
DF_Ungodmode = { "%s", " made guards visible and killable." },
DF_Gamemode = { "Gamemode started: Defense!\n", "Guards has ", seconds, ", to find a place to guard.\n",
"Cells will be opened after defense started.\n", "After some time, ", "%s", " will announce extermination." },
DF_Godmode = { "%s", " made guards invisible and unkillable." },

PVPReason = "Not enough players to start game. PvP enabled.",
}